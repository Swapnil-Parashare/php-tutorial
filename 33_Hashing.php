<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <form action = "33_Hashing.php" method="post">

        Enter Password : <input type="text" name="password">
        
        Re-enter Password : <input type="text" name="passwordNew">
        
        <input type="submit">
    </form>

    <?php
        $password = $_POST["password"];
        $storedHash = password_hash($password,PASSWORD_BCRYPT);

        echo "<br>Initial Password  &nbsp&nbsp&nbsp :- " . $password . "  :  " . $storedHash;
        echo "<br>";
    
        $passwordNew = $_POST["passwordNew"];
        $hashedPasswordNew = password_hash($passwordNew,PASSWORD_BCRYPT);

        echo "<br>Current Password &nbsp:- " . $passwordNew . "  :  " . $hashedPasswordNew;
        echo "<br>";


        if(password_verify($passwordNew,$storedHash))
        {
            echo "<br>Result : User is Authenticated!!!";

            echo "<br><h3>Note :-<br>
                   1]Even thou passwords are same the hash values are different, inspite of using same algorithm.<br>
                   2]This is because of random salt value generated by password_hash().<br>
                   3]Hence we use password_verify() function to authenticate, instead of directly comparing hashed values.</h3>";
        }
        else
        {
            echo "<br> Result : Invalid Password!!!";
        }
    ?>
</body>
</html>